#!/bin/sh

set -e

PREREQ=""

prereqs()
{
	echo "$PREREQ"
}

case $1 in
prereqs)
	prereqs
	exit 0
	;;
esac

. /usr/share/initramfs-tools/hook-functions

# setup users and groups

echo "root:x:0:0:root:/root:/bin/bash" > ${DESTDIR}/etc/passwd
echo "messagebus:x:108:111::/var/run/dbus:/bin/false" >> ${DESTDIR}/etc/passwd
chmod 644 ${DESTDIR}/etc/passwd

echo "root:x:0:" > ${DESTDIR}/etc/group
echo "messagebus:x:111:" >> ${DESTDIR}/etc/group
chmod 644 ${DESTDIR}/etc/group

echo "/bin/sh" > ${DESTDIR}/etc/shells
chmod 644 ${DESTDIR}/etc/shells

# setup dbus

mkdir -p ${DESTDIR}/var/run/dbus
mkdir -p ${DESTDIR}/usr/share/dbus-1

cp /usr/share/dbus-1/system.conf ${DESTDIR}/usr/share/dbus-1

cat << EOF > ${DESTDIR}/usr/share/dbus-1/system.conf
<!-- This configuration file controls the systemwide message bus.
     Add a system-local.conf and edit that rather than changing this 
     file directly. -->

<!-- Note that there are any number of ways you can hose yourself
     security-wise by screwing up this file; in particular, you
     probably don't want to listen on any more addresses, add any more
     auth mechanisms, run as a different user, etc. -->

<!DOCTYPE busconfig PUBLIC "-//freedesktop//DTD D-Bus Bus Configuration 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
<busconfig>

  <!-- Our well-known bus type, do not change this -->
  <type>system</type>

  <!-- Run as special user -->
  <user>messagebus</user>

  <!-- Fork into daemon mode -->
  <fork/>

  <!-- We use system service launching using a helper -->
  <standard_system_servicedirs/>

  <!-- This is a setuid helper that is used to launch system services -->
  <servicehelper>/usr/lib/dbus-1.0/dbus-daemon-launch-helper</servicehelper>

  <!-- Write a pid file -->
  <pidfile>/var/run/dbus/pid</pidfile>

  <!-- Enable logging to syslog -->
  <syslog/>

  <!-- Only allow socket-credentials-based authentication -->
  <auth>EXTERNAL</auth>

  <!-- Only listen on a local socket. (abstract=/path/to/socket 
       means use abstract namespace, don't really create filesystem 
       file; only Linux supports this. Use path=/whatever on other 
       systems.) -->
  <listen>unix:path=/var/run/dbus/system_bus_socket</listen>

  <policy context="default">
    <!-- All users can connect to system bus -->
    <allow user="*"/>

    <!-- Holes must be punched in service configuration files for
         name ownership and sending method calls -->
    <deny own="*"/>
    <deny send_type="method_call"/>

    <!-- Signals and reply messages (method returns, errors) are allowed
         by default -->
    <allow send_type="signal"/>
    <allow send_requested_reply="true" send_type="method_return"/>
    <allow send_requested_reply="true" send_type="error"/>

    <!-- All messages may be received by default -->
    <allow receive_type="method_call"/>
    <allow receive_type="method_return"/>
    <allow receive_type="error"/>
    <allow receive_type="signal"/>

    <!-- Allow anyone to talk to the message bus -->
    <allow send_destination="org.freedesktop.DBus"
           send_interface="org.freedesktop.DBus" />
    <allow send_destination="org.freedesktop.DBus"
           send_interface="org.freedesktop.DBus.Introspectable"/>
    <!-- But disallow some specific bus services -->
    <deny send_destination="org.freedesktop.DBus"
          send_interface="org.freedesktop.DBus"
          send_member="UpdateActivationEnvironment"/>
    <deny send_destination="org.freedesktop.DBus"
          send_interface="org.freedesktop.DBus.Debug.Stats"/>
    <deny send_destination="org.freedesktop.DBus"
          send_interface="org.freedesktop.systemd1.Activator"/>
  </policy>

  <!-- Only systemd, which runs as root, may report activation failures. -->
  <policy user="root">
    <allow send_destination="org.freedesktop.DBus"
           send_interface="org.freedesktop.systemd1.Activator"/>
  </policy>

  <!-- root may monitor the system bus. -->
  <policy user="root">
    <allow send_destination="org.freedesktop.DBus"
           send_interface="org.freedesktop.DBus.Monitoring"/>
  </policy>

  <!-- If the Stats interface was enabled at compile-time, root may use it.
       Copy this into system.local.conf or system.d/*.conf if you want to
       enable other privileged users to view statistics and debug info -->
  <policy user="root">
    <allow send_destination="org.freedesktop.DBus"
           send_interface="org.freedesktop.DBus.Debug.Stats"/>
  </policy>

  <policy user="root">
    <allow own="org.bluez"/>
  </policy>

  <!-- Include legacy configuration that was preserved in a Debian upgrade,
       if any -->
  <include ignore_missing="yes">/etc/dbus-1/system.conf.dpkg-bak</include>

  <!-- Config files are placed here that among other things, punch 
       holes in the above policy for specific services. -->
  <includedir>system.d</includedir>

  <includedir>/etc/dbus-1/system.d</includedir>

  <!-- This is included last so local configuration can override what's 
       in this standard file -->
  <include ignore_missing="yes">/etc/dbus-1/system-local.conf</include>

  <include if_selinux_enabled="yes" selinux_root_relative="yes">contexts/dbus_contexts</include>

</busconfig>
EOF

copy_exec /usr/bin/dbus-daemon
copy_exec /lib/x86_64-linux-gnu/libnsl.so.1
copy_exec /lib/x86_64-linux-gnu/libnss_files.so.2

manual_add_modules btusb
manual_add_modules btrtl
manual_add_modules btbcm
manual_add_modules btintel
manual_add_modules bluetooth
manual_add_modules rfkill

copy_exec /usr/bin/hcitool
copy_exec /bin/hciconfig
copy_exec /usr/sbin/rfkill
copy_exec /usr/bin/gatttool
copy_exec /usr/lib/bluetooth/bluetoothd

cat << EOF > ${DESTDIR}/bin/blue-initram
#!/bin/sh
/usr/bin/dbus-daemon --system --nopidfile --systemd-activation
/usr/lib/bluetooth/bluetoothd &
hciconfig hci0 up
EOF
chmod +x ${DESTDIR}/bin/blue-initram

exit 0

